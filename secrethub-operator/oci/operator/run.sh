#!/bin/bash

# this is the run.sh that is executed as 'Dockerfile' 'CMD [ "/gravitee-bot/run.sh"]'
echo "Secret Hub namespace : ${SECRETHUB_NAMESPACE}"
echo "Secret Hub repo : ${SECRETHUB_REPO}"

# secrethub signup # credentials file is already there on filesystem

mkdir -p ~/.secrethub
cp /gravitee-bot/.secrets/.secrethub/credential ~/.secrethub/credential

echo '+++'
echo ''
echo "Here is the value of the ROOT Token for Secrethub CLI Authentication generated by the [secrethub repo init <namespace>/<repo>] command. Using this token grants ALL PERMISSIONS on the Secret Hub Account, so do not use it in Pipeline Execution."
echo ''
# secrethub repo init [options] <namespace>/<repo>
secrethub repo init "${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}" | tee ./.root-token.secrethub
cat ./.root-token.secrethub
echo ''
echo '+++'

echo '+++'
echo ''
echo "Secret Hub existing repo after [${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}] Secret Hub CLI init :"
echo ''
secrethub repo ls "${SECRETHUB_NAMESPACE}"
echo ''

secrethub mkdir --parents ${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}/staging/docker/quay/botuser
secrethub mkdir --parents ${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}/staging/docker/quay/botoken
# secrethub mkdir --parents staging/docker/quay/botuser
# secrethub mkdir --parents staging/docker/quay/botoken

# cat /gravitee-bot/.secrets/docker/quay.io/botoken.secret
export QUAY_BOT_USER=$(cat /gravitee-bot/.secrets/docker/quay.io/botoken.secret)
echo "QUAY_BOT_USER=[${QUAY_BOT_USER}]"

cat /gravitee-bot/.secrets/docker/quay.io/botuser.secret | secrethub write ${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}/staging/docker/quay/botuser/username
cat /gravitee-bot/.secrets/docker/quay.io/botoken.secret | secrethub write ${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}/staging/docker/quay/botoken/token
# cat /gravitee-bot/.secrets/docker/quay.io/botuser.secret | secrethub write staging/docker/quay/botuser
# cat /gravitee-bot/.secrets/docker/quay.io/botoken.secret | secrethub write staging/docker/quay/botoken

echo '+++'
echo ''
echo "Secret Hub existing repo after writing secrets to [${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}] with Secret Hub CLI :"
echo ''
secrethub repo ls "${SECRETHUB_NAMESPACE}"
echo ''


# The --permission read flag will grant the service read access to the specified secrethub "repo" <namespace>/<repo>
# secrethub service init --permission read gravitee-lab/apim-gateway | tee ./.service-account.secrethub
secrethub service init --permission read gravitee-lab/apim-gateway > ./.service-account.secrethub



echo '+++'
echo ''
echo "Here is the value of the {SECRETHUB_CREDENTIAL} Environment Variable to create in your Circle CI project Settings : "
echo ''
cat ./.service-account.secrethub
echo ''
echo '+++'



echo '+++'
echo ''
echo "Here are the secrets that were written to secrethub: "
echo ''
echo "QUAY_BOT_USER=[$(secrethub read ${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}/staging/docker/quay/botuser/username)]"
echo "QUAY_BOT_TOKEN=[$(secrethub read ${SECRETHUB_NAMESPACE}/${SECRETHUB_REPO}/staging/docker/quay/botoken/token)]"
echo ''
echo '+++'

exit 0
